cru = cumsum(r0) / sum(r0) # to select subjets that get infected with probability proportional to r0
)
# simulate day by day
for(iw in 2:tend) { # iw <- 2
# intervention
if(is.null(int1)) {
if1 <- 1
} else {
if1 <- int1 %>% filter(t == iw) %>% select(rf) %>% unlist()
}
# select patients that are infective
pat2 <- pat1 %>% filter(is != 0 & is > iw-idur & is <= iw)
# rate of transmission
rt <- sum(pat2$r0) * if1
# number of subjects infected
ni <- rpois(1, rt)
if(ni > 0) {
# randomly select the patients who get transmitted
pt1 <- runif(ni, min = 0.0, max = 1.0)
ip1 <- findInterval(pt1, pat1$cru) + 1
# select patients who receive infection
pat1$sel <- FALSE
pat1[ip1, "sel"] <- TRUE
# infect patients who are not immune
pat1 <-
pat1 %>%
mutate(is = ifelse(is == 0 & sel, iw, is))
}
}
return(pat1)
}
# repeated simulations and summarize as median and percentile
mySim2 <- function(r0, sd0, int1 = NULL)
{
# subjects
pat1 <- tibble(
r0l = rnorm(nPop, log(r0), sd0), # log of patient specific rate
r0 = exp(r0l) / exp(sd0^2/2) # patient specific rate (rescaled to have mean r0)
)
sims <- list()
for(isim in 1:nsim) {
sim1 <- mySim(pat1, int1)
pp1 <-
ggplot(sim1, aes(x=r0, fill=(is!=0))) +
geom_density(alpha=0.4, position="stack") +
scale_x_log10()
s2 <- sim1 %>% group_by(is) %>% summarise(ni = n())
ts1 <-
tibble(t = 1:tend, isim=isim) %>%
left_join(s2, by = c("t" = "is")) %>%
mutate(
ni = ifelse(is.na(ni), 0, ni),
nt = cumsum(ni))
sims[[isim]] <- ts1
}
sim2 <-
bind_rows(sims) %>%
group_by(t) %>%
summarise(
ni25 = quantile(ni, probs = 0.25),
nim = median(ni),
ni75 = quantile(ni, probs = 0.75),
nt25 = quantile(nt, probs = 0.25),
ntm = median(nt),
nt75 = quantile(nt, probs = 0.75)
)
}
# Illustrate heterogenous patient population
pat1 <- tibble(
r0l = rnorm(nPop, log(r0b), sd0b), # log of patient specific rate
r0 = exp(r0l) / exp(sd0b^2/2) # patient specific rate (rescaled to have mean r0)
)
p0 <-
ggplot(pat1, aes(x=r0)) +
geom_density() +
scale_x_log10() +
xlab("Infection rate (1/Day)")
print(p0)
# make animated graph of disease progression
mygraph1 <- function(sim1) {
sim1 <-
sim1 %>%
mutate(bin = cut_interval(log(r0), n = 40)) %>%
group_by(bin) %>%
mutate(
dbin = median(r0),
order = as.double(bin)) %>%
ungroup()
an1 <-
sim1 %>%
expand(ip, iweek) %>%
rename(lweek = iweek) %>%
full_join(sim1, by="ip") %>%
ungroup()
an2 <-
an1 %>%
group_by(dbin, bin, order, lweek) %>%
summarise(
n = sum(is>0 & iweek<=lweek),
ntot = n(),
ninf = sum(is>0),
reff = mean(r0 * (is == 0 | iweek>lweek)) * (idur - 1)) %>%
ungroup() %>%
arrange(lweek, dbin)
mylabs1 <-
sim1 %>%
select(order, dbin) %>%
unique() %>%
mutate(lab = ifelse((order+2) %% 5 == 0, paste(signif(dbin,2)), ""))
# Animation
p <-
an2 %>%
ggplot(aes(x = order)) +
geom_bar(aes(y=ntot), stat = "identity", fill = "grey20", alpha=0.2) +
geom_bar(aes(y=ninf), stat = "identity", fill = "red", alpha=0.2) +
geom_bar(aes(y=n), stat = "identity", fill = "#ff9933") +
labs(title=paste0('Week {closest_state}\nR(1 year) = ', round(R360, 2)),
x="Infection rate (1/Day)",
y="Number of subjects") +
theme(plot.title = element_text(hjust = 0.5, size = 18)) +
scale_x_continuous(breaks=mylabs1$order, labels=mylabs1$lab) +
transition_states(lweek, transition_length = 1, state_length = 5) +
view_follow(fixed_y=TRUE, fixed_x = TRUE) +
ease_aes('cubic-in-out')
return(p)
}
sim2 <- mySim2(r0a, sd0a)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
# setup
require(dplyr)
require(tidyr)
require(ggplot2)
require(gganimate)
set.seed(123)
theme_set(theme_classic())
# size of population
nPop <- 10^5
# end of simulation
tend <- 365
# infective period, assumed to start one day after infection with duration
idur <- 7
# number of repeated simulations
nsim <- 50
# homgenous population
# rate of new infections per day
r0a = 0.4
# between subject variability of r0
sd0a = 0.0
# heterogenous population
# rate of new infections per day
r0b = 0.2
# between subject variability of r0
sd0b = 1.0
# simulate spread of infection
mySim <- function(pat1, int1 = NULL, rVac = 0.0) {
# number of patients that get vaccinated
nVac <- max(1.0, min(nrow(pat1), rVac*nrow(pat1)))
pat1 <-
pat1 %>%
mutate(
is = 0, # day of infection (0 ... not infected)
ip = 1:n(), # subject identifier
is = ifelse(ip <= nVac, 99999, is), # vacinated subjects
is = ifelse(ip %in% ceiling(runif(10,nVac,n())), 1, is), # 10 random subjects get infected
cru = cumsum(r0) / sum(r0) # to select subjets that get infected with probability proportional to r0
)
# simulate day by day
for(iw in 2:tend) { # iw <- 2
# intervention
if(is.null(int1)) {
if1 <- 1
} else {
if1 <- int1 %>% filter(t == iw) %>% select(rf) %>% unlist()
}
# select patients that are infective
pat2 <- pat1 %>% filter(is != 0 & is > iw-idur & is <= iw)
# rate of transmission
rt <- sum(pat2$r0) * if1
# number of subjects infected
ni <- rpois(1, rt)
if(ni > 0) {
# randomly select the patients who get transmitted
pt1 <- runif(ni, min = 0.0, max = 1.0)
ip1 <- findInterval(pt1, pat1$cru) + 1
# select patients who receive infection
pat1$sel <- FALSE
pat1[ip1, "sel"] <- TRUE
# infect patients who are not immune
pat1 <-
pat1 %>%
mutate(is = ifelse(is == 0 & sel, iw, is))
}
}
return(pat1)
}
# repeated simulations and summarize as median and percentile
mySim2 <- function(r0, sd0, int1 = NULL)
{
# subjects
pat1 <- tibble(
r0l = rnorm(nPop, log(r0), sd0), # log of patient specific rate
r0 = exp(r0l) / exp(sd0^2/2) # patient specific rate (rescaled to have mean r0)
)
sims <- list()
for(isim in 1:nsim) {
sim1 <- mySim(pat1, int1)
pp1 <-
ggplot(sim1, aes(x=r0, fill=(is!=0))) +
geom_density(alpha=0.4, position="stack") +
scale_x_log10()
s2 <- sim1 %>% group_by(is) %>% summarise(ni = n())
ts1 <-
tibble(t = 1:tend, isim=isim) %>%
left_join(s2, by = c("t" = "is")) %>%
mutate(
ni = ifelse(is.na(ni), 0, ni),
nt = cumsum(ni))
sims[[isim]] <- ts1
}
sim2 <-
bind_rows(sims) %>%
group_by(t) %>%
summarise(
ni25 = quantile(ni, probs = 0.25),
nim = median(ni),
ni75 = quantile(ni, probs = 0.75),
nt25 = quantile(nt, probs = 0.25),
ntm = median(nt),
nt75 = quantile(nt, probs = 0.75)
)
}
# Illustrate heterogenous patient population
pat1 <- tibble(
r0l = rnorm(nPop, log(r0b), sd0b), # log of patient specific rate
r0 = exp(r0l) / exp(sd0b^2/2) # patient specific rate (rescaled to have mean r0)
)
p0 <-
ggplot(pat1, aes(x=r0)) +
geom_density() +
scale_x_log10() +
xlab("Infection rate (1/Day)")
print(p0)
# make animated graph of disease progression
mygraph1 <- function(sim1) {
sim1 <-
sim1 %>%
mutate(bin = cut_interval(log(r0), n = 40)) %>%
group_by(bin) %>%
mutate(
dbin = median(r0),
order = as.double(bin)) %>%
ungroup()
an1 <-
sim1 %>%
expand(ip, iweek) %>%
rename(lweek = iweek) %>%
full_join(sim1, by="ip") %>%
ungroup()
an2 <-
an1 %>%
group_by(dbin, bin, order, lweek) %>%
summarise(
n = sum(is>0 & iweek<=lweek),
ntot = n(),
ninf = sum(is>0),
reff = mean(r0 * (is == 0 | iweek>lweek)) * (idur - 1)) %>%
ungroup() %>%
arrange(lweek, dbin)
mylabs1 <-
sim1 %>%
select(order, dbin) %>%
unique() %>%
mutate(lab = ifelse((order+2) %% 5 == 0, paste(signif(dbin,2)), ""))
# Animation
p <-
an2 %>%
ggplot(aes(x = order)) +
geom_bar(aes(y=ntot), stat = "identity", fill = "grey20", alpha=0.2) +
geom_bar(aes(y=ninf), stat = "identity", fill = "red", alpha=0.2) +
geom_bar(aes(y=n), stat = "identity", fill = "#ff9933") +
labs(title=paste0('Week {closest_state}\nR(1 year) = ', round(R360, 2)),
x="Infection rate (1/Day)",
y="Number of subjects") +
theme(plot.title = element_text(hjust = 0.5, size = 18)) +
scale_x_continuous(breaks=mylabs1$order, labels=mylabs1$lab) +
transition_states(lweek, transition_length = 1, state_length = 5) +
view_follow(fixed_y=TRUE, fixed_x = TRUE) +
ease_aes('cubic-in-out')
return(p)
}
sim2 <- mySim2(r0a, sd0a)
# setup
require(dplyr)
require(ggplot2)
set.seed(123)
theme_set(theme_classic())
# size of population
nPop <- 10^5
# end of simulation
tend <- 365
# infective period, assumed to start one day after infection with duration
idur <- 7
# number of repeated simulations
nsim <- 50
# homgenous population
# rate of new infections per day
r0a = 0.4
# between subject variability of r0
sd0a = 0.0
# heterogenous population
# rate of new infections per day
r0b = 0.2
# between subject variability of r0
sd0b = 1.0
mySim <- function(pat1, int1 = NULL) {
pat1 <-
pat1 %>%
mutate(
is = 0, # day of infection (0 ... not infected)
ip = 1:n(), # subject identifier
is = ifelse(ip %in% ceiling(runif(10,0,n())), 1, 0), # 10 random subjects get infected
cru = cumsum(r0) / sum(r0), # to select subjets that get infected with probability proportional to r0
crl = lag(cru)
)
# simulate day ba day
for(iw in 2:tend) { # iw <- 2
# intevention
if(is.null(int1)) {
if1 <- 1
} else {
if1 <- int1 %>% filter(t == iw) %>% select(rf) %>% unlist()
}
# select patients that are infective
pat2 <- pat1 %>% filter(is != 0 & is > iw-idur)
# rate of transmission
rt <- sum(pat2$r0) * if1
# number of subjects infected
ni <- rpois(1, rt)
if(ni > 0) {
# randomly select the patients who get transmitted
pt1 <- runif(ni, min = 0.0, max = 1.0)
ip1 <- findInterval(pt1, pat1$cru) + 1
# select patients who receive infection
pat1$sel <- FALSE
pat1[ip1, "sel"] <- TRUE
# infect patients who are not immune
pat1 <-
pat1 %>%
mutate(is = ifelse(is == 0 & sel, iw, is))
}
}
return(pat1)
}
mySim2 <- function(r0, sd0, int1 = NULL)
{
# subjects
pat1 <- tibble(
r0l = rnorm(nPop, log(r0), sd0), # log of patient specific rate
r0 = exp(r0l) / exp(sd0^2/2) # patient specific rate (rescaled to have mean r0)
)
sims <- list()
for(isim in 1:nsim) {
sim1 <- mySim(pat1, int1)
s2 <- sim1 %>% group_by(is) %>% summarise(ni = n())
ts1 <-
tibble(t = 1:tend, isim=isim) %>%
left_join(s2, by = c("t" = "is")) %>%
mutate(
ni = ifelse(is.na(ni), 0, ni),
nt = cumsum(ni))
sims[[isim]] <- ts1
}
sim2 <-
bind_rows(sims) %>%
group_by(t) %>%
summarise(
ni25 = quantile(ni, probs = 0.25),
nim = median(ni),
ni75 = quantile(ni, probs = 0.75),
nt25 = quantile(nt, probs = 0.25),
ntm = median(nt),
nt75 = quantile(nt, probs = 0.75)
)
}
# Illustrate heterogenous patient population
pat1 <- tibble(
r0l = rnorm(nPop, log(r0b), sd0b), # log of patient specific rate
r0 = exp(r0l) / exp(sd0b^2/2) # patient specific rate (rescaled to have mean r0)
)
p0 <-
ggplot(pat1, aes(x=r0)) +
geom_density() +
scale_x_log10() +
xlab("Infection rate (1/Day)")
print(p0)
sim2 <- mySim2(r0a, sd0a)
View(pat1)
View(p0)
View(p0)
# setup
require(dplyr)
require(ggplot2)
set.seed(123)
theme_set(theme_classic())
# size of population
nPop <- 10^5
# end of simulation
tend <- 365
# infective period, assumed to start one day after infection with duration
idur <- 7
# number of repeated simulations
nsim <- 50
# homgenous population
# rate of new infections per day
r0a = 0.4
# between subject variability of r0
sd0a = 0.0
# heterogenous population
# rate of new infections per day
r0b = 0.2
# between subject variability of r0
sd0b = 1.0
mySim <- function(pat1, int1 = NULL) {
pat1 <-
pat1 %>%
mutate(
is = 0, # day of infection (0 ... not infected)
ip = 1:n(), # subject identifier
is = ifelse(ip %in% ceiling(runif(10,0,n())), 1, 0), # 10 random subjects get infected
cru = cumsum(r0) / sum(r0), # to select subjets that get infected with probability proportional to r0
crl = lag(cru)
)
# simulate day ba day
for(iw in 2:tend) { # iw <- 2
# intevention
if(is.null(int1)) {
if1 <- 1
} else {
if1 <- int1 %>% filter(t == iw) %>% select(rf) %>% unlist()
}
# select patients that are infective
pat2 <- pat1 %>% filter(is != 0 & is > iw-idur)
# rate of transmission
rt <- sum(pat2$r0) * if1
# number of subjects infected
ni <- rpois(1, rt)
if(ni > 0) {
# randomly select the patients who get transmitted
pt1 <- runif(ni, min = 0.0, max = 1.0)
ip1 <- findInterval(pt1, pat1$cru) + 1
# select patients who receive infection
pat1$sel <- FALSE
pat1[ip1, "sel"] <- TRUE
# infect patients who are not immune
pat1 <-
pat1 %>%
mutate(is = ifelse(is == 0 & sel, iw, is))
}
}
return(pat1)
}
mySim2 <- function(r0, sd0, int1 = NULL)
{
# subjects
pat1 <- tibble(
r0l = rnorm(nPop, log(r0), sd0), # log of patient specific rate
r0 = exp(r0l) / exp(sd0^2/2) # patient specific rate (rescaled to have mean r0)
)
sims <- list()
for(isim in 1:nsim) {
sim1 <- mySim(pat1, int1)
s2 <- sim1 %>% group_by(is) %>% summarise(ni = n())
ts1 <-
tibble(t = 1:tend, isim=isim) %>%
left_join(s2, by = c("t" = "is")) %>%
mutate(
ni = ifelse(is.na(ni), 0, ni),
nt = cumsum(ni))
sims[[isim]] <- ts1
}
sim2 <-
bind_rows(sims) %>%
group_by(t) %>%
summarise(
ni25 = quantile(ni, probs = 0.25),
nim = median(ni),
ni75 = quantile(ni, probs = 0.75),
nt25 = quantile(nt, probs = 0.25),
ntm = median(nt),
nt75 = quantile(nt, probs = 0.75)
)
}
# Illustrate heterogenous patient population
pat1 <- tibble(
r0l = rnorm(nPop, log(r0b), sd0b), # log of patient specific rate
r0 = exp(r0l) / exp(sd0b^2/2) # patient specific rate (rescaled to have mean r0)
)
p0 <-
ggplot(pat1, aes(x=r0)) +
geom_density() +
scale_x_log10() +
xlab("Infection rate (1/Day)")
print(p0)
sim2 <- mySim2(r0a, sd0a)
View(p0)
View(p0)
View(p0)
View(p0[["data"]])
